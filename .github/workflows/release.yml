on:
  release:
    types: [created]
name: Handle Release
jobs:
  generate:
    name: Create release-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@master
      - name: Generate the artifacts
        run : |
          sudo apt-get update
          sudo apt install -y jq
          sudo apt install libusb-1.0-0-dev
          sudo apt install libieee1284-3-dev
          sudo apt install libcurl4-openssl-dev
          sudo apt install libsndfile1-dev
          sudo apt install libasound-dev
          sudo apt install libudev-dev
          sudo apt-get install fpc
          pwd
          ls -l
          cd src
          make distclean
          make
          make clean
          ./pcprint
          echo Done
          cd ..
      - name: Upload the artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
           if [ -z "${INPUT_RELEASEID}" ]; then
              RELEASE_ID=$(jq --raw-output '.release.id' "$GITHUB_EVENT_PATH")
              echo "Discovered RELEASE_ID: ${RELEASE_ID}"
           else
              RELEASE_ID="${INPUT_RELEASEID}"
              echo "Using supplied RELEASE_ID: ${RELEASE_ID}"
           fi

           for file in src/pcprint; do
              if [ ! -s "$file" ]; then
                 echo "**************************"
                 echo " file is empty - skipping."
                 echo "**************************"
                 continue
              fi
              FILENAME=$(basename "${file}")
              UPLOAD_URL="https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/${RELEASE_ID}/assets?name=${FILENAME}"
              echo "Upload URL is ${UPLOAD_URL}"
              tmp=$(mktemp)
              response=$(curl \
                 -sSL \
                 -XPOST \
                 -H "${AUTH_HEADER}" \
                 --upload-file "${file}" \
                 --header "Content-Type:application/octet-stream" \
                 --write-out "%{http_code}" \
                 --output $tmp \
                 "${UPLOAD_URL}")
              if [ "$?" -ne 0 ]; then
                 echo "**********************************"
                 echo " curl command did not return zero."
                 echo " Aborting"
                 echo "**********************************"
                 cat $tmp
                 rm $tmp
                 exit 1
              fi

              if [ $response -ge 400 ]; then
                 echo "***************************"
                 echo " upload was not successful."
                 echo " Aborting"
                 echo " HTTP status is $response"
                 echo "**********************************"
                 cat $tmp
                 rm $tmp
                 exit 1
              fi
              cat $tmp | jq .
              rm $tmp
           done
